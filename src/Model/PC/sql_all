   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE ACCOUNT SET Balance = Balance + :h_amount where accountno=:h_accountno;
   EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
           EXEC SQL UPDATE FIXEDACCOUNT SET Balance = Balance + :h_amount where accountno=:h_accountno;
       EXEC SQL COMMIT;
       EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL SELECT Balance INTO :h_balance FROM ACCOUNT WHERE accountno=:h_accountno;
    EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
       EXEC SQL UPDATE ACCOUNT SET Balance = Balance - :h_amount WHERE accountno=:h_accountno;
                   EXEC SQL UPDATE FIXEDACCOUNT SET Balance = Balance - :h_amount WHERE accountno=:h_accountno;
        EXEC SQL COMMIT;
        EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL INSERT INTO atm VALUES (ATM_ID.nextval,:h_atmLocation,:h_atmBalance,:h_atmRegion,100000,'active');
    EXEC SQL SELECT ATM_ID.currval INTO :h_atmID from dual;
      EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
         EXEC SQL SELECT status INTO :h_status FROM atm WHERE atmID=:h_atmID;
                EXEC SQL SELECT atmID,location,balance,region,thresholdValue,status INTO  :h_atmID,:h_atmlocation,:h_atmbalance,:h_atmregion,:h_atmthresholdValue,:h_atmstatus  FROM atm WHERE atmID=:h_atmID;
                 EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE atm SET location = :h_atmLocation WHERE atmID = :h_atmID;
   EXEC SQL UPDATE atm SET region = :h_atmRegion WHERE atmID = :h_atmID;
   EXEC SQL UPDATE atm SET status = :h_atmStatus WHERE atmID = :h_atmID;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
       EXEC SQL SELECT status INTO :h_status FROM atm WHERE atmID=:h_atmID;
           EXEC SQL UPDATE atm SET status='inactive' WHERE atmID=:h_atmID;
              EXEC SQL COMMIT;
     EXEC SQL BEGIN DECLARE SECTION;
        EXEC SQL END DECLARE SECTION;
        EXEC SQL SELECT atmID INTO :l_atmid FROM atm WHERE atmID= :h_atmid;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
      EXEC SQL BEGIN DECLARE SECTION;
      EXEC SQL END DECLARE SECTION;
       EXEC SQL INSERT INTO salariedAccount values(accountno.nextval,:h_minbalance);
 EXEC SQL INSERT INTO account values(accountno.currval,'savings',:h_CustID,:h_minbalance,1);
         EXEC SQL SELECT accountno.currval INTO :h_accno from dual;
       EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
        EXEC SQL INSERT INTO NonsalariedAccount values(accountno.nextval,:h_minbalance);
        EXEC SQL INSERT INTO account values(accountno.currval,'savings',:h_CustID,:h_minbalance,1);
          EXEC SQL SELECT accountno.currval INTO :h_accno from dual;
      EXEC SQL BEGIN DECLARE SECTION;
      EXEC SQL END DECLARE SECTION;
 EXEC SQL INSERT INTO account values(accountno.currval,'current',:h_CustID,:h_balance,1);
        EXEC SQL SELECT accountno.currval INTO :h_accno from dual;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
     EXEC SQL SELECT rate INTO :h_rate FROM rate WHERE time=:h_depositYears;
     EXEC SQL INSERT INTO fixedaccount values(accountno.nextval,:h_depositAmount,:h_depositYears,:h_maturityAmount,sysdate);
         EXEC SQL INSERT INTO fixedaccount values(accountno.nextval,:h_depositAmount,:h_depositYears,:h_maturityAmount,sysdate);
         EXEC SQL INSERT INTO fixedaccount values(accountno.nextval,:h_depositAmount,:h_depositYears,:h_maturityAmount,sysdate);
EXEC SQL INSERT INTO account values(accountno.currval,'fixed',:h_CustID,:h_depositAmount,1);
        EXEC SQL SELECT accountno.currval INTO :h_accno from dual;
      EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
     EXEC SQL UPDATE account SET status=0 WHERE accountno=:h_accountno; 
    EXEC SQL COMMIT;
        EXEC SQL BEGIN DECLARE SECTION;
        EXEC SQL END DECLARE SECTION;
        EXEC SQL SELECT count(*) INTO :h_tempaccountno1 FROM account WHERE accountno=:h_tempaccountno;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy"; 
EXEC SQL INSERT INTO BILL VALUES(:h_BillId,:h_accountno,'Water',:h_Amount,SYSDATE,BILLREFID.NEXTVAL);
EXEC SQL SELECT transactionid.nextval into :h_tid from dual;
EXEC SQL INSERT INTO TRANSACTION VALUES(:h_tid,:h_accountno,SYSDATE,'DEPOSIT',:h_Amount);
 EXEC SQL select billrefid.currval into :h_RefId from dual;
 EXEC SQL COMMIT;
EXEC SQL SELECT BIILID , CUSTOMERID , BILLAMOUNT into :h_BillId , :h_accountno, :h_Amount FROM BILL WHERE REFID=:h_RefId;
 EXEC SQL COMMIT WORK RELEASE; 
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL INSERT INTO BILL VALUES(:h_BillId,:h_accountno,'Electricity',:h_Amount,SYSDATE,BILLREFID.NEXTVAL);
EXEC SQL SELECT transactionid.nextval into :h_tid from dual;
EXEC SQL INSERT INTO TRANSACTION VALUES(:h_tid,:h_accountno,SYSDATE,'DEPOSIT',:h_Amount);
 EXEC SQL select billrefid.currval into :h_RefId from dual;
 EXEC SQL COMMIT;
  EXEC SQL SELECT BIILID , CUSTOMERID , BILLAMOUNT into :h_BillId , :h_accountno, :h_Amount FROM BILL WHERE REFID=:h_RefId;
 EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL INSERT INTO BILL VALUES(:h_BillId,:h_accountno,'Phone',:h_Amount,SYSDATE,BILLREFID.NEXTVAL);
EXEC SQL SELECT transactionid.nextval into :h_tid from dual;
EXEC SQL INSERT INTO TRANSACTION VALUES(:h_tid,:h_accountno,SYSDATE,'DEPOSIT',:h_Amount);
 EXEC SQL select billrefid.currval into :h_RefId from dual;
 EXEC SQL COMMIT;
  EXEC SQL SELECT BIILID , CUSTOMERID , BILLAMOUNT into :h_BillId , :h_accountno, :h_Amount FROM BILL WHERE REFID=:h_RefId;
 EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :h_hostName IDENTIFIED BY :h_password;
EXEC SQL COMMIT WORK RELEASE;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   //EXEC SQL INSERT INTO branchAccount VALUES(100000, :h_branchId, :h_branchThreshold, :h_currentBalance);
   EXEC SQL INSERT INTO branchAccount VALUES(AccountNumber.nextval,:h_branchId,:h_branchThreshold,:h_currentBalance,1);
   //EXEC SQL SELECT AccountNumber.currval INTO :h_accountNumber FROM DUAL;   
   EXEC SQL COMMIT;
   EXEC SQL SELECT AccountNumber.CurrVal INTO :h_accountNumber FROM DUAL;
   EXEC SQL COMMIT;
   EXEC SQL COMMIT; 
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL SELECT   branchid, thresholdValue, balance INTO  :h_branchId, :h_branchThreshold, :h_currentBalance,:h_status  FROM branchAccount WHERE accountNo =:h_branchAccountNumber;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT count(1) INTO :h_count FROM branchAccount WHERE accountNo =:h_branchAccountNumber AND status=1;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE branchAccount SET status = 0 WHERE accountNo =:h_branchAccountNumber;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE branchaccount set branchid=:h_branchId where  ACCOUNTNO=:h_branchAccountNumber;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE branchaccount set  THRESHOLDVALUE=:h_branchThreshold where  ACCOUNTNO=:h_branchAccountNumber;
EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE branchaccount set balance=:h_currentBalance where  ACCOUNTNO=:h_branchAccountNumber;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT BALANCE INTO :h_bal FROM account WHERE ACCOUNTNO=:h_accountno;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT balance into :h_balance from account where accountno=:h_accountno;
EXEC SQL SELECT status INTO :h_tstatus from account where accountno=:h_accountno;
EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL UPDATE ACCOUNT SET balance =:h_balance WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL COMMIT;
EXEC SQL COMMIT WORK RELEASE;
EXEC SQL COMMIT;
EXEC SQL UPDATE ACCOUNT SET balance =:h_balance WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL COMMIT;
EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT balance into :h_balance from account where accountno=:h_accountno;
EXEC SQL SELECT status INTO :h_tstatus from account where accountno=:h_accountno;
EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL UPDATE ACCOUNT SET balance =:h_balance WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL COMMIT;
EXEC SQL COMMIT WORK RELEASE;
EXEC SQL COMMIT;
EXEC SQL UPDATE ACCOUNT SET balance =:h_balance WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL COMMIT;
EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT balance INTO :h_balance FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT status INTO :h_tstatus from account where accountno=:h_accountno;
EXEC SQL SELECT balance INTO :h_balance FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT (sysdate - currentdate) days_between into :h_days from fixedaccount where accountno=:h_accountno;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE FIXEDACCOUNT SET balance =0, macturitybalance=0 where accountno=:h_accountno;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE FIXEDACCOUNT SET balance =0, macturitybalance=0 where accountno=:h_accountno;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE FIXEDACCOUNT SET principalbalance =0, macturitybalance=0 where accountno=:h_accountno;
EXEC SQL UPDATE ACCOUNT SET balance=0 where accountno=:h_accountno;
EXEC SQL UPDATE ACCOUNT SET balance=0  WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_balance);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL SELECT CURRENTDATE,years INTO :h_opendate,:h_period from fixedaccount where accountno=:h_accountno;
EXEC SQL SELECT macturitybalance into :h_balance from fixedaccount where accountno=:h_accountno;
EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT balance INTO :h_balance FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT status INTO :h_tstatus from account where accountno=:h_accountno;
EXEC SQL SELECT balance INTO :h_balance FROM ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL COMMIT;
EXEC SQL UPDATE ACCOUNT SET balance=:h_balance WHERE accountno=:h_accountno;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO TRANSACTION VALUES(transactionid.NextVal,:h_accountno,SYSDATE,:h_type,:h_amount);
EXEC SQL COMMIT;
EXEC SQL SELECT SYSDATE INTO :h_date from dual;
EXEC SQL COMMIT WORK RELEASE; 
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL SELECT  location, region, accountno, branchmanager INTO  :h_branchLocation, :h_branchRegion, :h_accountNo, :h_branchBM FROM branch WHERE branchID = :h_branchID AND status = 1;
  EXEC SQL BEGIN DECLARE SECTION;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
  EXEC SQL SELECT atmstatus into :h_stat from customer WHERE CustomerID=:h_CustomerID;
  EXEC SQL UPDATE CUSTOMER SET atmstatus=:h_status WHERE CustomerID=:h_CustomerID;
  EXEC SQL INSERT INTO CREQUEST VALUES(requestid.NextVal,:h_CustomerID,:h_type); 
  EXEC SQL SELECT requestid.currval into :h_requestID from dual;
   EXEC SQL COMMIT;
   EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
 EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL select count(1) INTO :h_Count from customer where customerID=:h_CustomerID AND status=1;
 EXEC SQL SELECT CUSTOMERID , NAME , DOB , GENDER , ADDRESS , ATMSTATUS INTO :h_CustomerID , :h_Name , :h_dob , :h_Gender , :h_Address, :h_AtmStatus
   EXEC SQL COMMIT;
   EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
 EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL select count(1) INTO :h_Count from account where accountno=:h_accountno;
EXEC SQL SELECT CUSTOMERID INTO :h_CustomerID from ACCOUNT WHERE accountno=:h_accountno;
EXEC SQL SELECT NAME , DOB , GENDER , ADDRESS INTO :h_Name , :h_dob , :h_Gender , :h_Address FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID ; 
EXEC SQL SELECT BALANCE INTO :h_balance from account where accountno=:h_accountno;
EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
 EXEC SQL COMMIT;
 EXEC SQL COMMIT WORK RELEASE;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
   EXEC SQL select count(1) INTO :h_Count from account where accountno=:h_accountno;
       EXEC SQL SELECT CUSTOMERID INTO :h_CustomerID from ACCOUNT WHERE accountno=:h_accountno;
       EXEC SQL SELECT NAME , DOB , GENDER , ADDRESS INTO :h_Name , :h_dob , :h_Gender , :h_Address FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID ;
       EXEC SQL SELECT BALANCE INTO :h_balance from account where accountno=:h_accountno;
       EXEC SQL SELECT type INTO :h_typestat FROM ACCOUNT WHERE accountno=:h_accountno;
     EXEC SQL COMMIT;
     EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL BEGIN DECLARE SECTION;
 EXEC SQL END DECLARE SECTION;
 EXEC SQL SELECT COUNT(1) INTO :l_limit FROM account WHERE accountno=:h_accountno AND customerid=:h_customerid AND status=1;
 EXEC SQL SELECT COUNT(1) INTO :l_limit FROM request WHERE accountno=:h_accountno;
 EXEC SQL SELECT balance INTO :h_balance FROM account WHERE accountno=:h_accountno;
  EXEC SQL SELECT type INTO :l_type1 FROM account WHERE accountno=:h_accountno AND customerid=:h_customerid;
  EXEC SQL UPDATE account set balance=(balance-:h_Cheques) WHERE accountno=:h_accountno AND customerid=:h_customerid;
  EXEC SQL COMMIT;
 EXEC SQL COMMIT;
  EXEC SQL UPDATE account set balance=(balance-:h_Cheques) WHERE accountno=:h_accountno AND customerid=:h_customerid;
  EXEC SQL COMMIT;
 EXEC SQL COMMIT;
 EXEC SQL INSERT INTO REQUEST VALUES(requestid.NextVal,:h_accountno,:h_CharCheques,SYSDATE);
 EXEC SQL COMMIT;
  EXEC SQL SELECT requestid,accountno,type,reqdate INTO :h_id,:h_account,:h_type,:h_dates FROM request WHERE accountno=:h_accountno;
 EXEC SQL BEGIN DECLARE SECTION;
 EXEC SQL END DECLARE SECTION;
 EXEC SQL SELECT COUNT(1) INTO :l_limit FROM account WHERE customerid=:h_customerid AND accountno=:h_accountno AND status=1;
 EXEC SQL SELECT accountno,balance,type,customerid INTO :h_acc,:h_bal,:h_type,:h_customerid FROM account WHERE accountno=:h_accountno;
  EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
  EXEC SQL SELECT STATUS INTO :h_Status FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID;
   EXEC SQL SELECT NAME , DOB , GENDER , ADDRESS , ATMSTATUS INTO  :h_Name , :h_dob , :h_Gender , :h_Address, :h_AtmStatus
   EXEC SQL UPDATE customer SET status=0 WHERE CUSTOMERID=:h_CustomerID ;
 EXEC SQL COMMIT;  
EXEC SQL UPDATE account SET status=0 WHERE CUSTOMERID=:h_CustomerID ;
 EXEC SQL COMMIT;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
 EXEC SQL SELECT STATUS INTO :h_Status FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID;
   EXEC SQL UPDATE customer SET GENDER = :h_Gender WHERE CUSTOMERID=:h_CustomerID;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
 EXEC SQL SELECT STATUS INTO :h_Status FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID;
  EXEC SQL UPDATE customer SET ADDRESS=:h_Address WHERE CUSTOMERID=:h_CustomerID;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT STATUS INTO :h_Status FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID;
  EXEC SQL UPDATE customer SET NAME=:h_Name WHERE CUSTOMERID=:h_CustomerID;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
   EXEC SQL UPDATE customer SET DOB=:h_dob WHERE CUSTOMERID=:h_CustomerID;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT WORK RELEASE;
  EXEC SQL BEGIN DECLARE SECTION;
  EXEC SQL END DECLARE SECTION;
  EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
  EXEC SQL INSERT INTO CUSTOMER VALUES(SEQ_CUSTOMERID.NEXTVAL,:h_Name,:h_dob,:h_Gender,:h_Address,:h_Status,'Active');
    EXEC SQL select SEQ_CUSTOMERID.currval into :h_Customer_Id from dual;
   EXEC SQL COMMIT;
   EXEC SQL SELECT CUSTOMERID , NAME , DOB , ADDRESS , ATMSTATUS  INTO :h_CustomerID , :h_Name , :h_dob , :h_Address, :h_AtmStatus
   EXEC SQL COMMIT WORK RELEASE;
	 EXEC SQL BEGIN DECLARE SECTION;
	  EXEC SQL END DECLARE SECTION;
	  EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
	 EXEC SQL SELECT STATUS INTO :h_Status FROM CUSTOMER WHERE CUSTOMERID=:h_CustomerID;
	  EXEC SQL SELECT NAME , DOB , GENDER , ADDRESS , ATMSTATUS INTO  :h_Name , :h_dob , :h_Gender , :h_Address, :h_AtmStatus
	 EXEC SQL COMMIT;
	 EXEC SQL COMMIT WORK RELEASE;
 EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
 EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL select count(1) INTO :h_Count from customer where customerID=:h_CustomerID AND status=1;
 EXEC SQL SELECT CUSTOMERID , NAME , DOB , GENDER , ADDRESS , ATMSTATUS INTO :h_CustomerID , :h_Name , :h_dob , :h_Gender , :h_Address, :h_AtmStatus
   EXEC SQL COMMIT;
   EXEC SQL COMMIT WORK RELEASE;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
EXEC SQL SELECT COUNT(1) INTO :l_limit FROM employee WHERE employeeid=:h_branchBM AND edesignation='Branch Manager';
EXEC SQL COMMIT;
EXEC SQL SELECT COUNT(1) INTO :l_limit FROM branch where branchmanager=:h_branchBM;
EXEC SQL COMMIT;
EXEC SQL INSERT INTO Branch VALUES(branchid.NextVal, :h_branchLocation, :h_branchRegion, 0, :h_branchBM, 1);
EXEC SQL COMMIT;
   EXEC SQL SELECT branchid.CurrVal INTO :h_branchID FROM DUAL;
   EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL SELECT count(1) INTO :h_count FROM branch WHERE branchID =:h_BranchID AND status = 1;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
EXEC SQL UPDATE branch SET status = 0 WHERE branchID = :h_BranchID;
   EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE branch SET branchmanager = :h_branchBM WHERE branchID = :h_branchID;
   EXEC SQL UPDATE branch SET location = :h_branchLocation WHERE branchID = :h_branchID;
   EXEC SQL UPDATE branch SET region = :h_branchRegion WHERE branchID = :h_branchID;
   EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
               EXEC SQL SELECT count(1) into :h_count from LOGIN where USERNAME = :h_username and PASSWORD = :h_password;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
	EXEC SQL UPDATE LOGIN SET PASSWORD = :h_newpassword WHERE SEQANS1 = :h_seqans1 AND SEQANS2 = :h_seqans2 AND USERNAME = :h_username;
EXEC SQL BEGIN DECLARE SECTION;
EXEC SQL END DECLARE SECTION;
	EXEC SQL UPDATE LOGIN SET PASSWORD = :h_newpassword WHERE USERNAME = :h_username and PASSWORD = :h_password;
	EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT (SYSDATE-to_date(:h_employeeDOB,'dd-mm-yyyy'))/365 INTO :h_flag FROM DUAL;
   EXEC SQL INSERT INTO employee VALUES(employeeid.NextVal, :h_employeeName, :h_employeeGender, :h_employeeAddress, :h_employeeDesignation, :h_employeeStatus, to_date(:h_employeeDOB,'dd-mm-yyyy'));
      EXEC SQL COMMIT;
      EXEC SQL SELECT employeeid.CurrVal INTO :h_employeeId FROM DUAL;
       EXEC SQL INSERT INTO login VALUES(:h_employeeId, :h_newpassword, :h_seqans1, :h_seqans2);
       EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT ENAME,to_char(DOB,'dd-mm-yyyy'),EGENDER,EADDRESS,EDESIGNATION,ESTATUS INTO :h_employeeName, :h_employeeDOB, :h_employeeGender, :h_employeeAddress, :h_employeeDesignation, :h_employeeStatus FROM employee WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT COUNT(1) INTO :h_count FROM employee WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
   EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE employee SET ENAME=:h_employeeName WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
       EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
  EXEC SQL END DECLARE SECTION;
   EXEC SQL SELECT accountno,type,CUSTOMERID,BALANCE,status INTO :h_accno,:h_acctype,:h_custid,:h_accbalance,:h_status FROM  account WHERE accountno=:h_accountno;
      // EXEC SQL UPDATE account SET status=0 WHERE accountno=:h_accountno;
      // EXEC SQL COMMIT;
       EXEC SQL UPDATE account SET status=1 WHERE accountno=:h_accountno;
       EXEC SQL COMMIT;
       EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE employee SET EADDRESS=:h_employeeAddress WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
       EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE employee SET EDESIGNATION=:h_employeeDesignation WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
       EXEC SQL COMMIT;
   EXEC SQL BEGIN DECLARE SECTION;
   EXEC SQL END DECLARE SECTION;
   EXEC SQL UPDATE employee SET ESTATUS=0 WHERE EMPLOYEEID=:h_employeeId AND ESTATUS=1;
       EXEC SQL COMMIT;
EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL DECLARE mycursor2 CURSOR for SELECT t.transactionID ,account.accountno,to_char(t.transactiondate,'dd-mm-yyyy'),t.type,t.amount FROM transaction t,account WHERE account.accountno=:h_accountno AND account.STATUS=1 ;
    EXEC SQL OPEN mycursor2;
        EXEC SQL CLOSE mycursor2;
         EXEC SQL COMMIT;
       EXEC SQL CLOSE mycursor2;
       EXEC SQL COMMIT;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor2 INTO :h_transactionID , :h_accountno,:h_transactiondate,:h_type,:h_amount ;
            EXEC SQL COMMIT;
              EXEC SQL CLOSE mycursor2;
              EXEC SQL COMMIT;
         EXEC SQL CLOSE mycursor2;
         EXEC SQL COMMIT;
 EXEC SQL BEGIN DECLARE SECTION;
 EXEC SQL END DECLARE SECTION;
 EXEC SQL DECLARE val CURSOR for SELECT *  FROM account where customerid=:h_CustID;
 EXEC SQL OPEN val;
  EXEC SQL WHENEVER NOT FOUND DO break;
 EXEC SQL FETCH val INTO :h_accountno,:h_type,:h_CustID,:h_accountbalance,:h_accountstatus;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL CONNECT :"user11@tcsghy" identified by :"tcsghy";
    EXEC SQL DECLARE mycursor1 CURSOR for SELECT * FROM customer WHERE STATUS=1;
    EXEC SQL OPEN mycursor1;
       EXEC SQL CLOSE mycursor1;
       EXEC SQL COMMIT WORK RELEASE;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor1 INTO :h_CustomerId, :h_Name, :h_DOB, :h_Gender, :h_Address,:h_status, :h_ATMStatus ;
         EXEC SQL CLOSE mycursor1;
       EXEC SQL COMMIT WORK RELEASE;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL DECLARE mycursor6 CURSOR for SELECT * FROM BRANCHACCOUNT;
    EXEC SQL OPEN mycursor6;
        EXEC SQL CLOSE mycursor6;
        EXEC SQL COMMIT ;
       EXEC SQL CLOSE mycursor6;
       EXEC SQL COMMIT ;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor6 INTO :h_branchAccountNumber, :h_branchId, :h_branchThreshold, :h_currentBalance, :h_status ;
              EXEC SQL COMMIT;
                 EXEC SQL CLOSE mycursor6;
                 EXEC SQL COMMIT ;
         EXEC SQL CLOSE mycursor6;
         EXEC SQL COMMIT ;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL DECLARE mycursor3 CURSOR for SELECT * FROM employee WHERE ESTATUS=1;
    EXEC SQL OPEN mycursor3;
        EXEC SQL CLOSE mycursor3;
        EXEC SQL COMMIT ;
       EXEC SQL CLOSE mycursor3;
       EXEC SQL COMMIT ;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor3 INTO :h_employeeId, :h_employeeName, :h_employeeGender, :h_employeeAddress, :h_employeeDesignation, :h_employeeStatus, :h_employeeDOB ;
              EXEC SQL COMMIT;
                 EXEC SQL CLOSE mycursor3;
                 EXEC SQL COMMIT ;
         EXEC SQL CLOSE mycursor3;
         EXEC SQL COMMIT ;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL CONNECT:"user11@tcsghy" identified by:"tcsghy";
    EXEC SQL DECLARE mycursor13 CURSOR for SELECT atmid,location,balance,region,thresholdvalue,status from atm ;
    EXEC SQL OPEN mycursor13;
        EXEC SQL CLOSE mycursor13;
        EXEC SQL COMMIT ;
       EXEC SQL CLOSE mycursor13;
       EXEC SQL COMMIT ;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor13 INTO :h_atmID, :h_atmlocation, :h_atmbalance, :h_atmregion, :h_atmthresholdValue, :h_atmstatus;
            EXEC SQL COMMIT;
                 EXEC SQL CLOSE mycursor13;
                 EXEC SQL COMMIT ;
         EXEC SQL CLOSE mycursor13;
         EXEC SQL COMMIT ;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL DECLARE mycursor4 CURSOR for SELECT * FROM employee WHERE ESTATUS=0;
    EXEC SQL OPEN mycursor4;
        EXEC SQL CLOSE mycursor4;
        EXEC SQL COMMIT ;
       EXEC SQL CLOSE mycursor4;
       EXEC SQL COMMIT ;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH mycursor4 INTO :h_employeeId, :h_employeeName, :h_employeeGender, :h_employeeAddress, :h_employeeDesignation, :h_employeeStatus, :h_employeeDOB ;
              EXEC SQL COMMIT;
                 EXEC SQL CLOSE mycursor4;
                 EXEC SQL COMMIT ;
         EXEC SQL CLOSE mycursor4;
         EXEC SQL COMMIT ;
    EXEC SQL BEGIN DECLARE SECTION;
    EXEC SQL END DECLARE SECTION;
    EXEC SQL DECLARE bcursor CURSOR for SELECT * FROM branch;
    EXEC SQL OPEN bcursor;
        EXEC SQL CLOSE bcursor;
        EXEC SQL COMMIT ;
       EXEC SQL CLOSE bcursor;
       EXEC SQL COMMIT ;
            EXEC SQL WHENEVER NOT FOUND DO break;
            EXEC SQL FETCH bcursor INTO :h_branchID, :h_branchLocation, :h_branchRegion, :h_accountNo, :h_branchBM, :h_bstatus;
              EXEC SQL COMMIT;
                 EXEC SQL CLOSE bcursor;
                 EXEC SQL COMMIT ;
         EXEC SQL CLOSE bcursor;
         EXEC SQL COMMIT ;
